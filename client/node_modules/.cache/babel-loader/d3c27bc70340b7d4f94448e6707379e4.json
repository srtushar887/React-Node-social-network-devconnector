{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\"; //load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //register user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //login user\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //user logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/tusher/Documents/react_node_project/dev_connector/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","e","register","name","email","password","config","headers","body","JSON","stringify","post","err","errors","response","forEach","error","msg","login","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SAAQC,gBAAR,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,UAAnD,EAA8DC,aAA9D,EAA4EC,UAA5E,EAAuFC,MAAvF,QAAoG,SAApG;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAgB;AAE1C,MAAIC,YAAY,CAACC,KAAjB,EAAuB;AACnBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,WAAV,CAAlB;AACAJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACZ,WADA;AAELa,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,KAAD,CAAR;AAIH,GAND,CAMC,OAAOC,CAAP,EAAU;AACPR,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACX;AADA,KAAD,CAAR;AAGH;AAGJ,CAnBM,C,CAwBP;;AACA,OAAO,MAAMe,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA4B,MAAMZ,QAAN,IAAiB;AACjE,QAAMa,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX;AADG,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAf,CAAb;;AACA,MAAI;AACA,UAAMT,GAAG,GAAG,MAAMd,KAAK,CAAC6B,IAAN,CAAW,YAAX,EAAwBH,IAAxB,EAA6BF,MAA7B,CAAlB;AACAb,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACd,gBADA;AAELe,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,KAAD,CAAR;AAKAP,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AAEH,GATD,CASC,OAAOoB,GAAP,EAAY;AACT,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAad,IAAb,CAAkBa,MAAjC;;AAEA,QAAIA,MAAJ,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIvB,QAAQ,CAACV,QAAQ,CAACiC,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAAhC;AACH;;AACDxB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACb;AADA,KAAD,CAAR;AAGH;AAEJ,CA5BM,C,CA+BP;;AACA,OAAO,MAAMiC,KAAK,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAoB,MAAMZ,QAAN,IAAiB;AACtD,QAAMa,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX;AADG,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACN,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAf,CAAb;;AACA,MAAI;AACA,UAAMT,GAAG,GAAG,MAAMd,KAAK,CAAC6B,IAAN,CAAW,WAAX,EAAuBH,IAAvB,EAA4BF,MAA5B,CAAlB;AACAb,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACV,aADA;AAELW,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,KAAD,CAAR;AAMAP,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AAEH,GAVD,CAUC,OAAOoB,GAAP,EAAY;AACT,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAad,IAAb,CAAkBa,MAAjC;;AAEA,QAAIA,MAAJ,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIvB,QAAQ,CAACV,QAAQ,CAACiC,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAAhC;AACH;;AACDxB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACT;AADA,KAAD,CAAR;AAGH;AAEJ,CA7BM,C,CAiCP;;AACA,OAAO,MAAM8B,MAAM,GAAG,MAAM1B,QAAQ,IAAG;AACnCA,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAACR;AAAN,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from \"axios\";\nimport {setAlert} from \"./alert\";\nimport {REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n//load user\nexport const loadUser = () => async dispatch=>{\n\n    if (localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n            type:USER_LOADED,\n            payload:res.data\n        })\n    }catch (e) {\n        dispatch({\n            type:AUTH_ERROR\n        })\n    }\n\n\n};\n\n\n\n\n//register user\nexport const register = ({name, email, password})=> async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, email, password});\n    try {\n        const res = await axios.post('/api/users',body,config);\n        dispatch({\n            type:REGISTER_SUCCESS,\n            payload:res.data\n        });\n\n        dispatch(loadUser());\n\n    }catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n        }\n        dispatch({\n            type:REGISTER_FAIL\n        })\n    }\n\n};\n\n\n//login user\nexport const login = (email, password)=> async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    const body = JSON.stringify({email, password});\n    try {\n        const res = await axios.post('/api/auth',body,config);\n        dispatch({\n            type:LOGIN_SUCCESS,\n            payload:res.data\n        });\n\n\n        dispatch(loadUser());\n\n    }catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n        }\n        dispatch({\n            type:LOGIN_FAIL\n        })\n    }\n\n};\n\n\n\n//user logout\nexport const logout = () => dispatch =>{\n    dispatch({type:LOGOUT});\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}