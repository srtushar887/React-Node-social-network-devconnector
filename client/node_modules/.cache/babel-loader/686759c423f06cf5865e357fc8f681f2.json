{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\"; //load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {}\n}; //register user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/tusher/Documents/react_node_project/dev_connector/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SAAQC,gBAAR,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,UAAnD,QAAoE,SAApE;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAgB;AAE1C,MAAIC,YAAY,CAACC,KAAjB,EAAuB,CAEtB;AAEJ,CANM,C,CAWP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA4B,MAAMN,QAAN,IAAiB;AACjE,QAAMO,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX;AADG,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAf,CAAb;;AACA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,YAAX,EAAwBJ,IAAxB,EAA6BF,MAA7B,CAAlB;AACAP,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAACpB,gBADA;AAELqB,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,KAAD,CAAR;AAIH,GAND,CAMC,OAAOC,GAAP,EAAY;AACT,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACP,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAAhC;AACH;;AACDtB,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAACnB;AADA,KAAD,CAAR;AAGH;AAEJ,CAzBM","sourcesContent":["import axios from \"axios\";\nimport {setAlert} from \"./alert\";\nimport {REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n//load user\nexport const loadUser = () => async dispatch=>{\n\n    if (localStorage.token){\n\n    }\n\n}\n\n\n\n\n//register user\nexport const register = ({name, email, password})=> async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, email, password});\n    try {\n        const res = await axios.post('/api/users',body,config);\n        dispatch({\n            type:REGISTER_SUCCESS,\n            payload:res.data\n        });\n    }catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n        }\n        dispatch({\n            type:REGISTER_FAIL\n        })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}